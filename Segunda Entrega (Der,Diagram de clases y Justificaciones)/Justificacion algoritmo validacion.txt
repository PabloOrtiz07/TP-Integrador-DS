Justificación Resolución Algoritmo de Validación:
Se utiliza una clase ValidadorContrasenaSegura con un método publico esContrasenaValida que recibe por paramerto el nombre de Usuario y la contraseña a validar y luego con esos parámetros verifica mediante métodos privados que cumpla las siguientes condiciones:
•	Su largo debe ser mayor que una cantidad mínima (establecida en 8)
•	No puede ser igual al nombre de usuario
•	No puede estar entre las 10000 contraseñas mas inseguras
•	Un mismo carácter no puede estar repetido 3 o mas veces de manera consecutiva
Cada uno de estos métodos devuelve un valor booleano.
Después se tiene otro método privado flagsTieneMayusculaMinusculaNumeroYEspeciales que devuelve una lista con booleanos  que indican si la contraseña no tiene alguno de estos tipos de caracteres
Finalmente el método esContrasenaValida agrega a una lista llamada flagsErrores todos los booleanos que se obtuvieron mediante estos métodos privados y la retorna al main
En el main con esta lista verifica si no hay errores (ninguna flag en True), crea un usuario con el nombre y la contraseña indicada e intenta agregarlo al repositorio de usuarios (puede fallar si ya existe un usuario con ese nombre)
En caso de que haya errores (algún flag en true) se muestra por pantalla los errores que tiene la contraseña
